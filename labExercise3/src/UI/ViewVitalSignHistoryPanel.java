/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package UI;

import Model.Application;
import Model.Observation;
import Model.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mandalore
 */
public class ViewVitalSignHistoryPanel extends javax.swing.JPanel {

    private Application application;
    DefaultTableModel viewTableModel;
    Observation selectedObservation;

    /**
     * Creates new form ViewVitalSignHistoryPanel
     */
    public ViewVitalSignHistoryPanel() {
        initComponents();
    }

    ViewVitalSignHistoryPanel(Application application) {
        initComponents();
        this.application = application;
        this.viewTableModel = (DefaultTableModel) observationTable.getModel();

        showObservations();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        id = new javax.swing.JLabel();
        temperature = new javax.swing.JLabel();
        fieldId = new javax.swing.JTextField();
        fieldTemperature = new javax.swing.JTextField();
        fieldBloodPressure = new javax.swing.JTextField();
        UpdateObservationBtn = new javax.swing.JButton();
        bloodPressure = new javax.swing.JLabel();
        ViewAndUpdateLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        observationTable = new javax.swing.JTable();
        ViewObservationButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        id.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        id.setText("id");
        add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 20, -1));

        temperature.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        temperature.setText("temperature");
        add(temperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        fieldId.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        fieldId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldIdActionPerformed(evt);
            }
        });
        add(fieldId, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, -1));

        fieldTemperature.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        fieldTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldTemperatureActionPerformed(evt);
            }
        });
        add(fieldTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, -1, -1));

        fieldBloodPressure.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        fieldBloodPressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldBloodPressureActionPerformed(evt);
            }
        });
        add(fieldBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));

        UpdateObservationBtn.setBackground(new java.awt.Color(255, 255, 204));
        UpdateObservationBtn.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        UpdateObservationBtn.setText("Update observation");
        UpdateObservationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateObservationBtnActionPerformed(evt);
            }
        });
        add(UpdateObservationBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        bloodPressure.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        bloodPressure.setText("blood pressure");
        add(bloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        ViewAndUpdateLabel.setFont(new java.awt.Font("Monaco", 0, 18)); // NOI18N
        ViewAndUpdateLabel.setText("VIEW OR UPDATE PATIENT VITAL SIGNS HERE");
        add(ViewAndUpdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 430, -1));

        observationTable.setBackground(new java.awt.Color(204, 204, 255));
        observationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Observation ID", "Temperature", "Blood pressure"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(observationTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 370, -1));

        ViewObservationButton.setBackground(new java.awt.Color(255, 255, 204));
        ViewObservationButton.setFont(new java.awt.Font("Monaco", 0, 14)); // NOI18N
        ViewObservationButton.setText("View observation details");
        ViewObservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewObservationButtonActionPerformed(evt);
            }
        });
        add(ViewObservationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 270, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void fieldIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldIdActionPerformed

    private void fieldTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldTemperatureActionPerformed

    private void fieldBloodPressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldBloodPressureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldBloodPressureActionPerformed

    private void UpdateObservationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateObservationBtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:

        // update the observation object
        if (!fieldId.getText().isEmpty()) {

            // call the findObservation method
            Observation o = this.application.getVitalSignHistory().searchForObservationById(Integer.valueOf(fieldId.getText()));
            o.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
            o.setTemperature(Double.valueOf(fieldTemperature.getText()));

            //  or
            // use the seletedObservation member we defined at the top of this class
//            this.selectedObservation.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
//            this.selectedObservation.setTemperature(Double.valueOf(fieldTemperature1.getText()));
        } else {
            JOptionPane.showMessageDialog(null, "No selection detected");
        }

        showObservations();
    }//GEN-LAST:event_UpdateObservationBtnActionPerformed

    private void ViewObservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewObservationButtonActionPerformed
        // TODO add your handling code here:
        // what was clicked? Get the row in the table that was clicked
        int selectedRow = observationTable.getSelectedRow();

        if (selectedRow >= 0) {

            // we can directly fetch the Observation object from the Zeroth position
            this.selectedObservation = (Observation) observationTable.getValueAt(selectedRow, 0);

            // fill all the text fields
            fieldId.setText(String.valueOf(this.selectedObservation.getObservationId()));
            fieldBloodPressure.setText(String.valueOf(this.selectedObservation.getBloodPressure()));
            fieldTemperature.setText(String.valueOf(this.selectedObservation.getTemperature()));

        } else {
            // no selection made by the user

            JOptionPane.showMessageDialog(null, "Please select a row!");
        }
    }//GEN-LAST:event_ViewObservationButtonActionPerformed

    public void showObservations() {
        VitalSignHistory vsh = this.application.getVitalSignHistory();

        if (vsh.getVitalSignHistory().size() > 0) {
            // display

            viewTableModel.setRowCount(0);
            for (Observation o : vsh.getVitalSignHistory()) {
                // number of columns in the table = 3 and row should be framed

                Object row[] = new Object[3];
                row[0] = o;
                row[1] = o.getTemperature();
                row[2] = o.getBloodPressure();

                // add the row to the table
                viewTableModel.addRow(row);

            }

        } else {
            System.out.print("No data recorded");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UpdateObservationBtn;
    private javax.swing.JLabel ViewAndUpdateLabel;
    private javax.swing.JButton ViewObservationButton;
    private javax.swing.JLabel bloodPressure;
    private javax.swing.JTextField fieldBloodPressure;
    private javax.swing.JTextField fieldId;
    private javax.swing.JTextField fieldTemperature;
    private javax.swing.JLabel id;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable observationTable;
    private javax.swing.JLabel temperature;
    // End of variables declaration//GEN-END:variables
}
